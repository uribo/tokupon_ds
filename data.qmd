---
title: "データの種類と表現方法"
execute:
  echo: false
---

```{r}
#| include: false
library(dplyr)
```

## データの種類

データと言われて思い浮かべるものはなんでしょうか。
データとは個々の情報

値のあつまり

対象から情報を引き出す ... ある動物について、体の一部の大きさや体重を測る、雌雄を調べる


## 変数と尺度水準

体重という変数

体重を記録するときは数値を用いました。
数量を表す変数のことを量的変数と言います。
数量からなる変数なので、平均を求めたり大きい順番に並び替えるといった処理が可能です。

では雌雄や分類群はどのように記録するのが適切でしょうか。
これらは数量として扱いにくいものです。
「雄」や「雌」、「鳥類」や「霊長類」という具合に項目を変数として扱う場合、
それは質的変数またはカテゴリ変数と呼ばれます。
質的変数は量的変数のように足し算や引き算といった計算ができないのが特徴です。

<!-- 因子、水準 -->


質的変数は名義尺度と順序尺度に

量的変数は間隔尺度と比例尺度

### データフレーム

データ分析の作業においては、データの変数を比較し、関係を調べることが頻繁に行われます。
特定の個体や観測について複数の項目を同時に扱えるようにするために、データを表形式でまとめて表現します。
これを表データまたは**データフレーム**と呼びます。

データフレームの例として、いくつかの動物の体の大きさ（体長）と体重の記録をデータフレームにまとめてみましょう。
データフレームでは個人や個体、観測といったデータを一つの**行**にまとめます。
レッサーパンダの体長と体重の行、チンパンジーの体長と体重の行と、それぞれの値を行単位で記録します。
22種類の動物のデータをとった場合は22行、40種の動物についてであれば40行となりますね。
また、動物の分類群や名前や体長、体重といった変数を**列**として表します。

```{r}
# dfはデータフレーム(data frame)の頭文字から
df_zoo <- 
  readr::read_csv("data-raw/tokushima_zoo_animals22.csv", 
                col_types = "ccdd_")

df_zoo_subset <- 
  df_zoo |> 
  dplyr::filter(name %in% c("レッサーパンダ", "チンパンジー", "マントヒヒ", "ライオン", "フンボルトペンギン"))

df_zoo_subset |> 
  purrr::set_names(c("分類群", "動物の名前", "体長(cm)", "体重(kg)")) |> 
  knitr::kable(caption = "5種の動物についての体長・体重のデータフレーム")
```

データフレームではデータを横に見たものが行、縦に見たものを列と考えます。
上記のデータフレームは`r nrow(df_zoo_subset)`行`r ncol(df_zoo_subset)`列のデータフレームといえます。

::: callout-tip
## 表計算ソフトウェアでも表データを扱う

表計算ソフトウェアにデータを記録するときもデータフレームと同じ形式をとるよ。
ここでは1,2,3といった数字が行、A、B、Cといったアルファベットが列を示しているね。
それぞれの値を記録している場所のことをセルというよ。
これはデータを記録している番地のようなもので、例えば、チンパンジーの体重はB3を参照すれば良いことになるね。

![表計算ソフトウェアで表データを扱う](images/excel_table.png)

:::

先ほど`r nrow(df_zoo_subset)`種の動物のデータフレームを示しましたが、データ分析を進めていくには
より多くのデータが必要になります。
たくさんのデータがあれば、データから見えてくる傾向・パターンも見えやすくなります。
ここでは22種の動物について、同様の体長、体重を調べたデータを用意しました。
ここからはこのデータを使い、データを調べていくことにします。
なおデータフレームをプログラミング言語で扱うときは列の名前（列名）に
漢字やひらがなを使うと意味がわかりやすいですが、できるだけ英語やローマ字を使ったものにしましょう。
ここでも次のように列名を日本語から英語に変えてあります。

- `taxon`: 動物の分類群
- `name`: 動物の種名
- `body_lengh_cm`: 体長(単位はcm)
- `weight_kg`: 体重(単位はkg)

```{r}
knitr::kable(df_zoo)
```

## データをグラフに表現する


数学は統計学的な考え方において必須ではありません。

探索的データ分析

度数分布表、ヒストグラム、散布図、カルトグラム

```{r}
count(df_zoo, taxon)
```


```{r}
df_zoo$body_lengh_cm
```

最小値、最大値


連続的な値を取る変数では、厳密には値は互いに異なり、同じ値となることはほとんどありません。
そのため、観測値をいくつかのグループに分け、度数（頻度）を調べます。

```{r}
#| echo: true
min(df_zoo$body_lengh_cm, na.rm = TRUE)
max(df_zoo$body_lengh_cm, na.rm = TRUE)

range(df_zoo$body_lengh_cm, na.rm = TRUE)
```



**度数分布表**は手元のデータの値をいくつかの階級 (class)

数え上げて度数を表にする。


度数分布をグラフ化する方法の一つとして**ヒストグラム**があります。

::: {.callout-warning}

## 階級幅の異なるヒストグラム

階級の幅が一定でないヒストグラムが存在するよ。

:::


データに対する説得力を増すためにも使われます。

データの特徴を素早く捉えることができます。

## まとめ

- データの種類
