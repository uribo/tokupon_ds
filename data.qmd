---
title: "データの種類と表現方法"
execute:
  echo: false
---

```{r}
#| include: false
library(dplyr)
library(palmerpenguins)
```


## 変数と尺度水準

質的変数と量的変数

質的変数は名義尺度と順序尺度に

量的変数は間隔尺度と比例尺度

### データフレーム

表形式でデータを記述したものを表データまたは**データフレーム**と呼びます。
データフレームは特定の個体や観測について、複数の項目を同時に扱うことができます。

例として、あるクラスにおける生徒の身長と体重の観測をデータフレームにまとめてみましょう。
データフレームでは個人や観測ごとのデータを一つの**行**にまとめます。
サトウさんについての身長と体重についての行、ウチダさんについての身長と体重の行というようにそれぞれの値を行単位で記録します。
20人のクラスでの身長と体重の記録であれば20行、30人のクラスでは30行となりますね。
生徒の名前や身長、体重といった項目は**変数**と呼び、**列**として表します。

```{r}
tibble::tibble(
  `名前` = c("サトウさん", "ウチダさん", "エンドウさん", "ミシマさん"),
  `身長` = c(153.3, 162.8, 145.1, 121.7),
  `体重` = c(48.4, 59.0, 47.2, 39.1))
```

データフレームではデータを横に見たものが行、縦に見たものを列と考えます。
上記のデータフレームは4行3列のデータフレームといえます。

データ分析の作業においては、データの変数を比較し、関係を調べることが頻繁に行われます。
この時にデータフレームとしてデータを扱えると便利です。

次に示すのは南極大陸に生育するペンギンの大きさを調べた観測データです。
ここからはこのデータフレームを題材にして説明を行います。
それぞれの変数は次の意味をもちます（詳細は[付録のデータセット](dataset.qmd)を参照してください）。

- `species`: ペンギンの種類（種名）
- `bill_length_mm`: 口ばしの長さ。単位はミリメートル
- `body_mass_g`: 体重。単位はグラム

```{r}
#| echo: false
#| eval: true
dplyr::select(penguins, species, bill_length_mm, body_mass_g)
```

## データをグラフに表現する


数学は統計学的な考え方において必須ではありません。

探索的データ分析

度数分布表、ヒストグラム、散布図、カルトグラム

```{r}
count(penguins, species)
```


```{r}
penguins$bill_length_mm
```

最小値、最大値


連続的な値を取る変数では、厳密には値は互いに異なり、同じ値となることはほとんどありません。
そのため、観測値をいくつかのグループに分け、度数（頻度）を調べます。

```{r}
#| echo: true
min(penguins$bill_length_mm, na.rm = TRUE)
max(penguins$bill_length_mm, na.rm = TRUE)

range(penguins$bill_length_mm, na.rm = TRUE)
```



**度数分布表**は手元のデータの値をいくつかの階級 (class)

数え上げて度数を表にする。


度数分布をグラフ化する方法の一つとして**ヒストグラム**があります。

::: {.callout-warning}

## 階級幅の異なるヒストグラム

階級の幅が一定でないヒストグラムが存在するよ。

:::


データに対する説得力を増すためにも使われます。

データの特徴を素早く捉えることができます。
