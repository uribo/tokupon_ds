---
title: "グラフの作成"
---

```{r}
library(ggplot2)
```

## 探索的データ解析

第二次世界大戦の後、1977年にジョン・テューキーが著書「Exploratory Data Analysis」のなかで探索的データ解析（探索的データ分析）の重要性を説きました。

データ解析の第一歩は計算ではない

視覚化がモデル構築の足がかりになる


[データをグラフに表現する](data.qmd#データをグラフに表現する)では、ヒストグラムと箱ヒゲ図を紹介しました。

## 1変数のデータの要約

代表値、ヒストグラムや箱ヒゲ図による表現から一歩進んで

ドット、蜂群図、ヴァイオリンプロット、Sina、ハイブリッド、雨雲プロット

## 棒グラフ

**棒グラフはデータの大小を棒の高さで比較する**グラフの種類です。

データの大小関係が棒の高低で表されるためにデータの大小を比較するのに適します。

データの並びはグラフ作成ツールや作成者が決めることになります。

横軸に並ぶ項目の五十音順、データの大きさの順

値が小さいものから大きいものへの並び替えを昇順、
値が大きいものから小さいものへの並び替えを降順と呼びます。

年月や曜日など、順番に意味がある項目について順番を入れ替えることは好ましくありません。

### 積み上げ棒グラフ

<!-- 帯グラフ -->

## 折れ線グラフ

系列グラフ

主に時系列のデータを扱う際のグラフ表現となります。

横軸に年や月といった時間要素、縦軸にデータの値を投影します。
さらにそれぞれのデータ点を線で繋げることで、データが時系列で変化する様子を表現します。

## 円グラフ

## 散布図

[相関](correlation.qmd)を調べる際に散布図を用いる

[Datasaurus](http://www.thefunctionalart.com/2016/08/download-datasaurus-never-trust-summary.html)の紹介。相関係数や回帰直線が同じであっても散布図の形状が異なる。

アンスコムの例

```{r}
anscombe
```

```{r}
anscombe_long <- 
  anscombe |> 
  tidyr::pivot_longer(
    tidyselect::everything(),
    names_to = c(".value", "set"),
    names_pattern = "(.)(.)")

# anscombe_long |> 
#   dplyr::filter(set == 1) |> 
#   ggplot(aes(x, y)) +
#   geom_point(color = "orange") +
#   geom_smooth(method = lm, se = FALSE)
```

```{r}
library(datasauRus)
```


## 地図表現

カルトグラム

<!-- スノウのコレラの話 -->

```{r}
#| include: false
source("data-raw/zoo_conservation.R")
```

```{r}
#| message: false
library(sf)
library(rnaturalearth)
library(rnaturalearthhires)
library(dplyr)
```

```{r}
df_countries <-
  countrycode::codelist |>
  select(iso2c, cldr.name.ja) |>
  janitor::clean_names()

ne_world <-
  rnaturalearth::ne_countries(scale = 10, returnclass = "sf") |>
  select(admin, name, pop_est, pop_year, iso_a2, continent)

sf_zoo_conservation <- 
  ne_world |> 
  left_join(df_zoo_conservation |> 
              filter(name == "フンボルトペンギン") |> 
              tidyr::unnest(cols = occ) |> 
              select(code, presence),
            by = c("iso_a2" = "code")) |> 
  mutate(presence = tidyr::replace_na(presence, "Absence"))
```

動物の分布を示す地図を作成してみましょう。

```{r}
ggplot() +
  geom_sf(data = sf_zoo_conservation, 
          aes(fill = presence), 
          size = 0.001) +
  scale_fill_viridis_d()
```

```{r}
library(mapview)
```


```{r}
#| echo: true
#| eval: false
mapview(sf_zoo_conservation, 
                 zcol = "presence")
```

## 参考文献・URL
