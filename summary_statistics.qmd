---
title: "データの特徴を捉える"
---

```{r}
#| include: false
library(dplyr)
library(ragg)
```

```{r}
#| include: false
#| file: "data-raw/zoo.R"
```

[データ分析の目的](intro.qmd#)の一つに「データを要約すること」があることを示しました。
それでは実際に、データの要約に取り組んでみましょう。
例として動物データの体長を表示します。

```{r}
#| code-fold: false
df_zoo$body_length_cm
```

このデータの特徴として言えることは何でしょうか？
動物データに含まれるわずか`r nrow(df_zoo)`件の数値でも、こうした数値の羅列からデータの特徴を説明することは困難です。
データ分析で扱うデータの件数は数千、数万となる場合もあり、一つ一つデータを見ていくことも
現実的ではありません。
そこでデータを要約するために**代表値**の計算や**データの可視化**が行われます。

## データの分布

データの分布を明らかにする。

ある値がデータに含まれる数を<ruby>度数<rt>どすう</rt></ruby>または<ruby>頻度<rt>ひんど</rt></ruby>といいます。
動物のデータセットの分類群に対して度数を求めると次のようになります。

```{r}
#| echo: true
# 度数、頻度を英語で frequency といいます
count(df_zoo, taxon, name = "frequency") |>
  knitr::kable()
```

対象が量的変数の場合は頻度を簡単に求めることができます。
それでは量的変数、特に連続変数に対し度数を求めるにはどうすれば良いでしょうか。
量的変数に対して連続変数では同じ値をとることが少ないです。
そのため連続変数の度数を求めるときは、変数がとり得る値をいくつかの階級に分けて考えます。

階級分けのために、まずは変数の最小値と最大値を調べましょう。
最小値と最大値はそれぞれ`min()`関数と`max()`関数に対象の変数を与えることで求められます。

```{r}
#| echo: true
#| code-fold: false
# 動物データの体長について最小値・最大値を求める
min(df_zoo$body_length_cm, na.rm = TRUE)
max(df_zoo$body_length_cm, na.rm = TRUE)
```

最小値・最大値を一度に求めるための`range()`関数も同様に扱えます。

```{r}
#| echo: true
#| code-fold: false
range(df_zoo$body_length_cm, na.rm = TRUE)
```

最小値と最大値がわかったところで、次は階級を設定します。




データ中の度数をまとめて表形式にしたものは度数分布表と呼ばれます。

分類群の値ごとに同じデータがどれだけあるかをカウントして度数を求めます。


**度数分布表**は手元のデータの値をいくつかの階級 (class)


数学は統計学的な考え方において必須ではありません。

探索的データ分析

度数分布表、ヒストグラム、箱ヒゲ図、散布図、カルトグラム


### ヒストグラム

代表値に対して、データを図で表現する方法を解説します。
ヒストグラム、箱ヒゲ図、散布図は数値を図で表すための方法として用いられます。

度数分布をグラフ化する方法の一つとして**ヒストグラム**があります。

```{r}
#| label: histogram_for_body_length
#| fig-cap: 動物の体長のヒストグラム
#| warning: false
#| dev: ragg_png
library(ggplot2)
library(ragg)

df_zoo |> 
  ggplot(aes(body_length_cm)) +
  geom_histogram(bins = 6)
```

<!-- ビンの数を変えるとヒストグラムの形も変わる -->

::: {.callout-warning}

#### 階級幅の異なるヒストグラム

階級の幅が一定でないヒストグラムが存在するよ。

:::


データに対する説得力を増すためにも使われます。

データの特徴を素早く捉えることができます。




## 代表値

まず、複数の数値の性質や特徴をよく表す代表値について説明します。
代表値によるデータの要約は、データに含まれる数値の傾向を大まかに把握するために便利です。
代表値という名前の通り、数値によるデータの表現方法となります。

代表値によるデータの要約方法にはさまざまなものがあります。代表的なものは**平均値**の計算です。
平均値の他に中央値、最頻値が代表値としてしばしば使われます。
いくつかの代表値を紹介します。
その特徴をみていきましょう。

### データの位置を示す代表値: 平均値、中央値、最頻値

量的変数はデータを度数分布表やヒストグラムに表わすことで、
その分布の形を調べることができます。

分布の位置を示す代表値として広く用いられるものに、平均値、中央値、最頻値の3つがあります。

まず、代表値の代表として平均値を紹介します。
平均値にも複数の種類が存在しますが、ここではより一般的な**算術平均**を平均値の例として扱います。算術平均とは、2個以上のデータ（データの数を$N$とします）があるとき、そのすべての数値を足し合わせて$N$で割った値のことです。

```{r}
#| code-fold: false
# 1,3,5,7,10の平均を求めましょう
x <- c(1, 10, 5, 3, 7)
# まずは対象の数値を足し合わせます
sum(x)
# 次に数値の数(5)によって足し合わせた数値を割り算します
sum(x) / length(x)

# mean()関数を用いて平均値を計算することもできます。
mean(x)
```

平均値はその言葉の通り、データの真ん中あたりを示す代表値です。
しかし、「あたり」という点に注意してください。
平均値は必ずしもデータの真ん中を示す値ではありません。

中央値は、すべてのデータを大きさの順番に並べたとき、大きい方と小さい方のちょうど真ん中にくる値を指します。
例えば得られている数値が`r x`の場合には数値の数は`r length(x)`個なので、その真ん中の順位は3になります。
この真ん中の順位にくる数値を中央値とします。

```{r}
# xの数値は大きさの順番になっていないので並び替える
sort(x)

sort(x)[3]

median(x)
```

一方、数値の個数が偶数のときには真ん中の数を決めるのに悩んでしまいます。
例えば4つの数値からなるデータの中央値を求めようとすると、真ん中は2.5番目となってしまいます。データの中には2.5番目の値は含まれません。
このときは2番目と3番目の値の平均を中央値として利用します。

```{r}
# データの個数が偶数の場合の中央値の求め方
x <- c(1, 2, 4, 6)

mean(c(x[2], x[3]))

# median()関数で中央値を求められる
median(x)
```

最頻値はデータの中で最も頻繁に出現する値のことを言います。
クラスのテストの点数で、96点の人が3人と最も多かったとき、最頻値は96です。ただし92点の人が同様に3人いたときには96、92が最頻値となります。


```{r}
x <- 
  c(73, 58, 96, 61, 87, 54, 92, 92, 63, 80,
    92, 59, 77, 96, 62, 64, 64, 59, 76, 96)

# 各点数の人数を求めます
table(x)

# 最頻値を求めます
names(which(table(x) == max(table(x))))
```

上記の例は変数が離散変数の場合の最頻値の求め方でした。
連続変数の場合も手順は変わりませんが、数値を適当な間隔でまとめた階級により判断することがあります。

<!-- これについては後ほど、ヒストグラムを紹介するときに説明します。 -->

::: {.callout-tip .tokupon_none}
#### 動物データの代表値を計算しよう

動物データに対して平均値や中央値、最頻値を求めてみよう。
Rにはここで紹介した`mean()`や`median()`以外にも
代表値の算出を行う関数が用意されているよ。
それらについて調べて実行してみよう。

コードの例と解説は[練習問題](exercise.qmd)をみてね。

:::


### データのばらつき

分散、標準偏差


## データのばらつき

パーセンタイル、誤差


### 箱ヒゲ図

中央値を太い線で描く

箱

箱から<ruby>髭<rt>ひげ</rt></ruby>が伸びているような図であることから箱ヒゲ図と呼ばれます。

```{r}
#| warning: false
#| dev: ragg_png
df_zoo |> 
  ggplot(aes(y = body_length_cm)) +
  geom_boxplot()

# 分類群ごとの箱ヒゲ図を描画
# あらかじめ中央値を計算し、グラフ上では中央値の並びで分類群が表示されるように
# 調整しています。
df_zoo |> 
  filter(!is.na(body_length_cm)) |> 
  group_by(taxon) |> 
  mutate(body_length_median = median(body_length_cm)) |> 
  ungroup() |> 
  mutate(taxon = forcats::fct_reorder(taxon, body_length_median)) |> 
  ggplot(aes(taxon, body_length_cm)) +
  geom_boxplot()
```

## 相関: 2つの変数の間の関係

相関係数

相関係数は変数間の因果関係を示すものではありません。
例えば、ある地域の８月において、毎日のアイスの売り上げ個数と熱中症患者数の間に
正の相関があった場合でも、アイスが熱中症の原因となっているわけではありません。
アイスの売り上げ、熱中症の双方に影響するもの、気温が原因です。
気温について考慮せずに分析を進めてしまうと、見せかけの因果関係を発生させてしまいます。
熱中症患者の増加を抑えるためにアイスの販売を規制するなどの誤った対策が取られてしまう
恐れがあります。

## 参考文献・URL

- [@R300000001-I030221455-00]
